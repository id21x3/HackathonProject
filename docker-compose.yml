version: '3.8'

services:

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: 'myuser'
      SPRING_DATASOURCE_PASSWORD: 'secret'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - spring-boot-network

  postgres:
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: 'mydatabase'
      POSTGRES_PASSWORD: 'secret'
      POSTGRES_USER: 'myuser'
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - spring-boot-network
  # Сервис для фронтенда React
  frontend:
    build:
      context: ./frontend         # Указываем правильный путь к директории с фронтендом
      dockerfile: Dockerfile
    ports:
      - "3000:80"  # Nginx будет работать на порту 80 внутри контейнера, но мы будем доступаться к фронтенду через порт 3000
    networks:
      - spring-boot-network

networks:
  spring-boot-network:
    driver: bridge
